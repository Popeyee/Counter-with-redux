{"ast":null,"code":"import { createStore } from \"redux\";\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState , action) => {\n//     if (action.type === \"increment\") {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: true\n//         }\n//     }\n//     if(action.type === \"decrement\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: true\n//         }\n//     }\n//     if(action.type === \"increase\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: true\n//         }\n//     }\n//     if(action.type === \"toggle\") {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state;\n\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","configureStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer","counterActions","actions"],"sources":["/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/react-complete-guide/redux1/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState = { counter: 0, showCounter: true };\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.amount;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\n\n \n// const counterReducer = (state = initialState , action) => {\n//     if (action.type === \"increment\") {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: true\n//         }\n//     }\n//     if(action.type === \"decrement\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: true\n//         }\n//     }\n//     if(action.type === \"increase\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: true\n//         }\n//     }\n//     if(action.type === \"toggle\") {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state;\n\n// };\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAG9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAAS,CAACD,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IACjD,CAAC;IACDC,aAAa,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAMW,KAAK,GAAGf,cAAc,CAAC;EACzBgB,OAAO,EAAEX,YAAY,CAACW;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;AAElD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}